#!/bin/sh -e

# Autogenerates a 1x1 bitmap of a single color, for tiling as a background in
# Xorg. It's a bit of a hack, but it works.
# See https://en.wikipedia.org/wiki/BMP_file_format
#
# This program was originally written for xsetroot until I realize it was for
# xbm files. Thus, the usage of this program is limited, but kept around for
# refrence.

color="$1"
if [ -z "$color" ]; then
	echo "Specify a color, in RRGGBB form." >&2
	exit 1
fi

# By default, I keep my wallpaper at ~/.config/wall.
# So it would make sense to just output to there unless it should go somewhere
# else, no?
if [ -t 0 ]; then
	exec 1>"$HOME/.config/wall"
fi

# Strip off # if it's there
color="${color##\#}"

# Extract the hex bytes from the argument
# I would've just specified it as seperate arguments however this is not good
# when all you have to work with is the typical color format, RRGGBB.
red="$(printf '%s' "$color" | cut -b 1-2)"
green="$(printf '%s' "$color" | cut -b 3-4)"
blue="$(printf '%s' "$color" | cut -b 5-6)"

# To allow readability, most of the next section will be written in hexadecimal.
writebytes () { printf %b `printf \\\\%03o "$@"` ; }

# Bitmap header
writebytes 0x42 0x4D	# Header field (BM)
writebytes 0x3A 0 0 0	# Size (in bytes)
writebytes 0 0 0 0	# Reserved
writebytes 0x36 0 0 0	# Start address of the bitmap

# DIB header (BITMAPINFOHEADER, RGB24)
writebytes 0x28 0 0 0	# Size of this header
writebytes 0x01 0 0 0	# Width (1 pixel)
writebytes 0x01 0 0 0	# Height (1 pixel)
writebytes 0x01 0	# Number of color planes (1)
writebytes 0x18 0	# BPP (24 bits)
writebytes 0 0 0 0	# RGB, no compression
writebytes 0x04 0 0 0	# Size of bitmap data (4 bytes)
writebytes 0x01 0 0 0	# Pixels/meter horiz.
writebytes 0x01 0 0 0	# Pixels/meter vert.
writebytes 0 0 0 0	# Number of colors (none)
writebytes 0 0 0 0	# Important colors (all)

# Data
writebytes 0x$blue 0x$green 0x$red
writebytes 0		# padding
